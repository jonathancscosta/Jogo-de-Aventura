export class Animate{constructor(){this.arrCssWalk=["walk--top","walk--right","walk--bottom","walk--left","stand--top","stand--right","stand--bottom","stand--left"]}move(e){return new Promise(t=>{const i=helper.getTranslateValue(e.target),r=Math.floor(i.y),a=Math.floor(i.x),s=void 0===e.vertical?r:Math.floor(e.vertical),l=void 0===e.horizontal?a:Math.floor(e.horizontal),n=void 0===e.speed?player.speed:e.speed,o=void 0===e.easing?"linear":e.easing;e.target.animate([{transform:`translate(${a}px, ${r}px)`},{transform:`translate(${l}px, ${s}px)`}],{duration:n,iterations:1,easing:o,fill:"both"}).onfinish=(e=>{t(e)})})}walk(e,t){this.arrCssWalk.forEach(t=>{helper.removeClass(e,t)}),helper.addClass(e,t)}};export class Backpack{constructor(){this.objItem={},this.isUpdate=!1}addItem(e){const t=Number(e.getAttribute("data-item")),i=Number(e.getAttribute("data-amount"));this.isUpdate=!0,void 0===this.objItem[t]?this.objItem[t]=i:this.objItem[t]+=i}build(){let e="";for(let t in this.objItem)e+=this.buildHtml(t,this.objItem[t]);platform.elPageBackpackContent.innerHTML=e}buildHtml(e,t){return`\n            <div class="item-wrapper">\n                <div class="item item--${e} tile center"></div>\n                <input class="input" type="number" value="${t}" aria-label="number">\n            </div>\n        `}open(){modal.open("backpack"),this.isUpdate&&(this.isUpdate=!1,this.build())}};export class Camera{center(){const e=helper.getTranslateValue(platform.elPlayer);this.update(),animate.move({target:platform.elCamera,vertical:this.centerVertical(e),horizontal:this.centerHorizontal(e),speed:0})}centerHorizontal(e){const t=Number(-e.x+platform.elGameWidth/2-terrain.tileSizeHalf);return this.centerLimit(t,this.limit.centerHorizontal)}centerVertical(e){const t=Number(-e.y+platform.elGameHeight/2-terrain.tileSizeHalf);return this.centerLimit(t,this.limit.centerVertical)}centerLimit(e,t){return e<t?t:e>0?0:e}move(e){player.verifyWalk(e)||player.isMoving||(player.move(e),this.moveCamera(e))}moveCamera(e){const t=this.limit[e],i=helper.capitalize(e),r=helper.getTranslateValue(platform.elCamera);this[`verifyLimit${i}`]({limit:t,currentPosition:r})||this.moveCameraAnimate({side:e,currentPosition:r})}moveCameraAnimate(e){const t=e.currentPosition.x,i=e.currentPosition.y;let r,a={target:platform.elCamera};switch(e.side){case"down":r=Math.round(i-this.distance),Math.abs(camera.limit.down)-Math.abs(i)<this.distance&&(r=camera.limit.down),a.vertical=r;break;case"left":r=Math.round(t+this.distance),Math.abs(t)<this.distance&&(r=camera.limit.left),a.horizontal=r;break;case"up":r=Math.round(i+this.distance),Math.abs(r)<=this.distance&&(r=this.limit.up),a.vertical=r;break;case"right":r=Math.round(t-this.distance),platform.elGameWidth/2-this.distance-Math.abs(t)<this.distance&&(r=-1*camera.limit.right),a.horizontal=r}animate.move(a)}update(){this.distance=terrain.tileSize,this.limit={centerVertical:Number(-(terrain.height-platform.elGameHeight)),centerHorizontal:Number(-(terrain.width-platform.elGameWidth)),up:0,down:-1*Math.abs(terrain.tileSize*terrain.json.row-platform.elGameHeight),left:0,right:terrain.tileSize*terrain.json.column-platform.elGameWidth}}verifyLimitDown(e){const t=e.currentPosition.y;return e.limit>t}verifyLimitLeft(e){const t=e.currentPosition.x;return!(e.limit>t)}verifyLimitRight(e){const t=Math.abs(e.currentPosition.x);return e.limit<t}verifyLimitUp(e){const t=e.currentPosition.y;return e.limit<t}};export class Configuration{constructor(){this.delayTransition=2e3}};export class Craft{open(){modal.open("craft")}};export class Data{loadMap(e){const t={controller:`${this.apiUrl}map-${e}.${this.extension}`};helper.ajax(t).then(e=>{terrain.buildMap(e)}).then(()=>{this.loadPlayer()}).then(()=>{enemy.build(),this.save()})}loadPlayer(){if(player.isInitial)return player.isInitial=!1,void this.loadPlayerInitial();loadingMain.hide()}loadPlayerInitial(){const e={controller:`${this.apiUrl}player.${this.extension}`};helper.ajax(e).then(e=>{player.buildPlayer(e)})}save(){const e={controller:`${this.apiUrl}save.${this.extension}`};helper.ajax(e).then(e=>{console.log(e)})}update(e){this.extension=e.extension,this.dataBase=e.extension,this.folderDefault=`./api-${this.extension}/`,this.apiUrl=`${this.folderDefault}/`}};export class Enemy{constructor(){this.cssEnemy="enemy"}build(){this.enemyLength=terrain.json.enemy.quantity;const e=this.buildHtml();platform.elEnemy.innerHTML=e,this.setPosition()}buildHtml(){let e="";for(let t=0;t<this.enemyLength;t++){let i=helper.raffleArray(terrain.json.enemy.kind);e+=`\n                <div id="${this.cssEnemy}_${t}"\n                    class="tile center ${this.cssEnemy} ${this.cssEnemy}--${i}"\n                    data-amount="1"\n                    data-tile=""\n                >\n                    Enemy ${t}\n                </div>\n            `}return e}setPosition(){for(let e=0;e<this.enemyLength;e++){const t=document.querySelector(`#${this.cssEnemy}_${e}`),i=terrain.rafflePosition();t.setAttribute("data-tile",i),terrain.position({target:t,position:i})}}};export class Game{initialize(){data.loadMap(terrain.current)}};export class Helper{addClass(e,t){e&&(e.classList.contains(t)||e.classList.add(t))}ajax(e){return new Promise((t,i)=>{let r=new XMLHttpRequest;const a=void 0===e.kind?"GET":e.kind;r.open(a,e.controller,!0),r.setRequestHeader("Content-type","application/x-www-form-urlencoded"),r.onload=(()=>{r.status>=200&&r.status<300?t(r.responseText):i(r.statusText)}),r.onerror=(()=>i(r.statusText)),r.send(e.parameter)})}capitalize(e){return e.charAt(0).toUpperCase()+e.slice(1)}getOffset(e){if(!e)return;const t=e.getBoundingClientRect();return{top:t.top,right:t.right,bottom:t.bottom,left:t.left}}getTranslateValue(e){const t=getComputedStyle(e).transform;if("none"===t)return{x:0,y:0,z:0};const i=t.includes("3d")?"3d":"2d",r=t.match(/matrix.*\((.+)\)/)[1].split(", ");return"2d"===i?{x:Number(r[4]),y:Number(r[5]),z:0}:"3d"===i?{x:Number(r[12]),y:Number(r[13]),z:Number(r[14])}:void 0}raffleNumber(e){return e.minimum+Math.round((e.maximum-e.minimum)*Math.random())}raffleArray(e){return e[Math.floor(Math.random()*e.length)]}remove(e){null!==e&&e.parentNode.removeChild(e)}removeClass(e,t){e&&e.classList.contains(t)&&e.classList.remove(t)}};export class Keyboard{buildAction(e){switch(e){case"Up":case"ArrowUp":case"w":player.walk("up");break;case"Left":case"ArrowLeft":case"a":player.walk("left");break;case"Down":case"ArrowDown":case"s":player.walk("down");break;case"Right":case"ArrowRight":case"d":player.walk("right");break;case"Escape":modal.close();break;case"b":backpack.open();break;case"c":craft.open();break;case"p":pick.pick();break;case"h":player.hit()}}init(){document.addEventListener("keydown",e=>{this.buildAction(e.key)}),document.addEventListener("keyup",()=>{player.walkStop()})}};export class LoadingMain{constructor(){this.cssHide="hide",this.cssAnimation="animate"}update(){this.elWrapper=document.querySelector(".loading-main"),this.elLoading=this.elWrapper.querySelector(".loading")}hide(){setTimeout(()=>{this.elWrapper.classList.add(this.cssHide),this.elLoading.classList.remove(this.cssAnimation)},configuration.delayTransition)}show(){this.elWrapper.classList.remove(this.cssHide),this.elLoading.classList.add(this.cssAnimation)}};export class Modal{constructor(){this.cssModal="modal",this.cssClose=`${this.cssModal}--close`,this.cssHide="hide"}build(){this.update(),this.buildAction()}buildAction(){this.elCloseButton.onclick=(()=>{this.close()})}close(){this.hidePage(),this.elModal.classList.add(this.cssClose)}open(e){const t=document.querySelector(`#page_${e}`);this.hidePage(),this.elModal.classList.remove(this.cssClose),t.classList.remove(this.cssHide)}hidePage(){this.elPage.forEach(e=>{e.classList.contains(this.cssHide)||e.classList.add(this.cssHide)})}update(){this.elModal=document.querySelector(`.${this.cssModal}`),this.elContent=document.querySelector(`.${this.cssModal}__content`),this.elPage=this.elContent.querySelectorAll(".page"),this.elCloseButton=document.querySelector("#modal_close")}};export class Pick{constructor(){this.isPick=!1}pick(){if(!this.isPick)return;const e=player.tileCurrent,t=platform.elResource.querySelector(`[data-tile="${e}"]`),i=t.getAttribute("data-tile");terrain.removeItem(t),terrain.removeResource(i),backpack.addItem(t),this.setPick(!1)}setPick(e){const t=platform.elActionPick;e?t.removeAttribute("disabled"):t.setAttribute("disabled",""),this.isPick=e}};export class Platform{build(){this.update(),this.resize(),this.buildAction(),this.buildDirection()}buildAction(){this.elActionBackpack.onclick=(()=>{backpack.open()}),this.elActionCraft.onclick=(()=>{craft.open()}),this.elActionPick.onclick=(()=>{pick.pick()}),this.elActionHit.onclick=(()=>{player.hit()})}buildDirection(){this.elDirectionalUp.onclick=(()=>{camera.move("up")}),this.elDirectionalDown.onclick=(()=>{camera.move("down")}),this.elDirectionalLeft.onclick=(()=>{camera.move("left")}),this.elDirectionalRight.onclick=(()=>{camera.move("right")})}update(){this.elCamera=document.querySelector("#camera"),this.elGame=document.querySelector("#game"),this.elTerrain=document.querySelector("#terrain"),this.elPlayer=document.querySelector("#player"),this.elEnemy=document.querySelector(`#${enemy.cssEnemy}`),this.elResource=document.querySelector(`#${resource.cssResource}`),this.elPageBackpack=document.querySelector("#page_backpack"),this.elPageBackpackContent=this.elPageBackpack.querySelector(".content"),this.elPageCraft=document.querySelector("#page_craft"),this.elPageCraftContent=this.elPageCraft.querySelector(".content"),this.elBarLife=document.querySelector('[data-id="bar-life"]'),this.elBarHunger=document.querySelector('[data-id="bar-hunger"]'),this.elBarThirst=document.querySelector('[data-id="bar-thirst"]'),this.elActionBackpack=document.querySelector('[data-id="action-backpack"]'),this.elActionCraft=document.querySelector('[data-id="action-craft"]'),this.elActionPick=document.querySelector('[data-id="action-pick"]'),this.elActionHit=document.querySelector('[data-id="action-hit"]'),this.elDirectionalUp=document.querySelector('[data-id="directional-up"]'),this.elDirectionalDown=document.querySelector('[data-id="directional-down"]'),this.elDirectionalLeft=document.querySelector('[data-id="directional-left"]'),this.elDirectionalRight=document.querySelector('[data-id="directional-right"]')}updateBar(){this.elBarLife.setAttribute("value",player.lifeCurrent),this.elBarLife.setAttribute("max",player.life),this.elBarHunger.setAttribute("value",player.hungerCurrent),this.elBarHunger.setAttribute("max",player.hunger),this.elBarThirst.setAttribute("value",player.thirstCurrent),this.elBarThirst.setAttribute("max",player.thirst)}resize(){this.elGameWidth=this.elGame.offsetWidth,this.elGameHeight=this.elGame.offsetHeight}};export class Player{constructor(){this.speed=0,this.isMoving=!1,this.isInitial=!0}buildPlayer(e){this.buildVariable(e),platform.updateBar(),this.position(),loadingMain.hide()}buildVariable(e){const t=JSON.parse(e);this.life=t.life,this.lifeCurrent=t.lifeCurrent,this.hunger=t.hunger,this.hungerCurrent=t.hungerCurrent,this.thirst=t.thirst,this.thirstCurrent=t.thirstCurrent,this.tileCurrent=terrain.json.position.player,this.speed=t.speed}hit(){console.log("hit")}move(e){const t=this.moveCoordinates(e);let i,r={target:platform.elPlayer};const a=void 0!==t.tileNext?r.tileNext=t.tileNext:void 0;void 0!==t.vertical&&(r.vertical=t.vertical),void 0!==t.horizontal&&(r.horizontal=t.horizontal),this.isMoving||(this.isMoving=!0,(i=window.animate.move(r)).then(()=>this.moveSuccess({tileNext:a,side:e})))}moveSuccess(e){const t=terrain.verifyDoor(e.tileNext),i=terrain.verifyResource(e.tileNext);this.updatePosition({tileNext:e.tileNext,side:e}),t&&terrain.change(),pick.setPick(i)}moveCoordinates(e){const t=terrain.json.column,i=helper.getTranslateValue(platform.elPlayer);let r={};switch(e){case"up":r.tileNext=this.tileCurrent-t,r.vertical=i.y-camera.distance;break;case"down":r.tileNext=this.tileCurrent+t,r.vertical=i.y+camera.distance;break;case"left":r.tileNext=this.tileCurrent-1,r.horizontal=i.x-camera.distance;break;case"right":r.tileNext=this.tileCurrent+1,r.horizontal=i.x+camera.distance}return r}position(){terrain.position({target:platform.elPlayer,position:this.tileCurrent}),camera.center()}updatePosition(e){switch(this.isMoving=!1,this.tileCurrent=e.tileNext,e.side){case"up":this.currentVertical-=terrain.tileSize;break;case"down":this.currentVertical+=terrain.tileSize;break;case"left":this.currentHorizontal-=terrain.tileSize;break;case"right":this.currentHorizontal+=terrain.tileSize}}verifyWalk(e){const t=this.moveCoordinates(e);let i={target:platform.elPlayer};const r=void 0!==t.tileNext?i.tileNext=t.tileNext:void 0;return terrain.verifyWalk(r)}walk(e){this[`walk${helper.capitalize(e)}`](),this.lastWalkSide=e,camera.move(e)}walkDown(){animate.walk(platform.elPlayer,animate.arrCssWalk[2])}walkUp(){animate.walk(platform.elPlayer,animate.arrCssWalk[0])}walkRight(){animate.walk(platform.elPlayer,animate.arrCssWalk[1])}walkLeft(){animate.walk(platform.elPlayer,animate.arrCssWalk[3])}walkStop(){let e;"up"===this.lastWalkSide&&(e=4),"right"===this.lastWalkSide&&(e=5),"down"===this.lastWalkSide&&(e=6),"left"===this.lastWalkSide&&(e=7),animate.walk(platform.elPlayer,animate.arrCssWalk[e])}};export class Resource{constructor(){this.cssResource="resource",this.cssItem="item"}build(){this.resourceLength=terrain.json.resource.quantity;const e=this.buildHtml();platform.elResource.innerHTML=e,this.setPosition()}buildHtml(){let e="";for(let t=0;t<this.resourceLength;t++){let i=helper.raffleArray(terrain.json.resource.kind);e+=`\n                <div id="${this.cssItem}_${t}"\n                    class="${this.cssItem} ${this.cssItem}--${i} tile center" data-item="${i}"\n                    data-amount="1"\n                    data-tile=""\n                >\n                    Item ${t}\n                </div>\n            `}return e}setPosition(){for(let e=0;e<this.resourceLength;e++){const t=document.querySelector(`#${this.cssItem}_${e}`),i=terrain.rafflePosition();t.setAttribute("data-tile",i),terrain.arrResource.push(i),terrain.position({target:t,position:i})}}};export class Terrain{constructor(){this.current=1,this.json={},this.arr=[],this.arrWalkFalse=[0],this.arrDoor=[2],this.tileSize=48,this.tileSizeHalf=this.tileSize/2,this.tileId=0,this.tileIdPrefix="tile_",this.tileTotal=0}buildMap(e){this.json=JSON.parse(e),this.width=this.tileSize*this.json.column,this.height=this.tileSize*this.json.row,camera.update(),this.update(),this.convertArray(),this.buildHtml(),enemy.build(),resource.build(),player.isInitial||player.position()}buildHtml(){const e=this.buildHtmlRow();platform.elTerrain.style.width=`${this.width}px`,platform.elTerrain.style.height=`${this.height}px`,platform.elTerrain.innerHTML="",platform.elTerrain.insertAdjacentHTML("afterbegin",e)}buildHtmlRow(){let e="";for(let t=0;t<this.json.row;t++)e+=this.buildHtmlColumn(t);return e}buildHtmlColumn(e){let t="";for(let i=0;i<this.json.column;i++){const r=this.arr[e][i],a=Number(r.trim()),s=this.arrWalkFalse.includes(a),l=this.arrDoor.includes(a);(s||l)&&this.arrForbidden.push(this.tileId),t+=`<div class="tile tile--${a}" data-tile="${a}" id="${this.tileIdPrefix}${this.tileId}"></div>`,this.tileId++}return t}convertArray(){const e=this.json.map,t=Object.keys(e).length;for(let i=0;i<t;i++){let t=e[i].split(",");this.arr[i]=t}}change(){const e=player.tileCurrent,t=terrain.json.position;let i,r;loadingMain.show();for(let a in t)t.hasOwnProperty(a)&&t[a].tile===e&&(i=t[a].sendToMap,r=t[a].sendToTile);this.update(),player.tileCurrent=r,data.loadMap(i)}position(e){const t=e.target;if(!t)return;const i=this.tileIdPrefix+e.position,r=document.querySelector(`#${i}`),a=helper.getOffset(r),s=helper.getOffset(platform.elCamera),l={top:a.top-s.top,left:a.left-s.left};animate.move({target:t,vertical:Math.round(l.top),horizontal:Math.round(l.left),speed:0})}rafflePosition(){let e=this.rafflePositionRandom();for(;this.arrForbidden.includes(e);)e=this.rafflePositionRandom();return this.arrForbidden.push(e),e}rafflePositionRandom(){return helper.raffleNumber({minimum:0,maximum:terrain.tileTotal})}removeItem(e){helper.remove(e)}removeResource(e){const t=this.arrResource,i=t.indexOf(Number(e));i>-1&&t.splice(i,1)}verifyDoor(e){return this.verifyTile({tile:e,arr:"arrDoor"})}verifyResource(e){return this.arrResource.includes(e)}verifyWalk(e){return this.verifyTile({tile:e,arr:"arrWalkFalse"})}verifyTile(e){const t=document.querySelector(`#${this.tileIdPrefix}${e.tile}`),i=Number(t.getAttribute("data-tile"));return!!this[e.arr].includes(i)}update(){this.tileId=0,this.tileTotal=terrain.json.row*terrain.json.column,this.arrForbidden=[],this.arrResource=[]}};window.animate=new Animate,window.backpack=new Backpack,window.camera=new Camera,window.craft=new Craft,window.configuration=new Configuration,window.data=new Data,window.enemy=new Enemy,window.game=new Game,window.helper=new Helper,window.keyboard=new Keyboard,window.loadingMain=new LoadingMain,window.modal=new Modal,window.pick=new Pick,window.platform=new Platform,window.player=new Player,window.resource=new Resource,window.terrain=new Terrain,document.addEventListener("DOMContentLoaded",()=>{data.update({extension:"js",dataBase:"localStorage"}),loadingMain.update(),modal.build(),terrain.update(),platform.build(),keyboard.init(),game.initialize()}),addEventListener("resize",()=>{platform.resize(),camera.center()});